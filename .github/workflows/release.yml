name: Build & Release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: macos
            arch: aarch64
            runner: macos-latest
    runs-on: ${{ matrix.runner }}
    name: Build for ${{ matrix.os }} ${{ matrix.arch }}
    steps:
      - name: Extract version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV && echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '23'
          distribution: 'graalvm-community'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          check-for-updates: 'false'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Build Native Image
        run: |
          ./gradlew cli:nativeCompile
          zip -j jbeancount-${{ matrix.os }}-${{ matrix.arch }}.zip cli/build/native/nativeCompile/cli
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: jbeancount-${{ matrix.os }}-${{ matrix.arch }}
          path: jbeancount-${{ matrix.os }}-${{ matrix.arch }}.zip
          if-no-files-found: error
  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Download all built artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          pattern: jbeancount-*
          merge-multiple: true
      - run: ls -Rla dist
      - name: Release with JReleaser
        uses: jreleaser/release-action@v2
        env:
          JRELEASER_PROJECT_VERSION: ${{ needs.build.outputs.VERSION }}
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GH_PAT }}

